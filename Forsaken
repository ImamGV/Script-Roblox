local repo = 'https://raw.githubusercontent.com/mstudio45/LinoriaLib/main/'
local LibESP = loadstring(game:HttpGet("https://github.com/RGV-devid/Scripts/blob/main/ESP?raw=true"))()

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
local Options = Library.Options
local Toggles = Library.Toggles

Library.ShowToggleFrameInKeybinds = true
Library.ShowCustomCursor = true
Library.NotifySide = "Left"

local Window = Library:CreateWindow({
	Title = 'Forsaken | v0.0.1 (BETA)',
	Center = true,
	AutoShow = true,
	Resizable = true,
	ShowCustomCursor = true,
	NotifySide = "Left",
	TabPadding = 8,
	MenuFadeTime = 0
})

local Tabs = {
	Main = Window:AddTab('Main'),
	Settings = Window:AddTab('Settings')
}

local FPS = Tabs.Main:AddLeftGroupbox('FPS')

FPS:AddDropdown('DestroyLag', {
	Values = {'Builderman Sentry', 'Builderman Dispenser'},
	Default = 0,
	Multi = true,
	Text = 'Destroy Lag',
	Searchable = false,
})
FPS:AddToggle("AlwaysDestroy",{
Text = "Always Destroy",
Default = false,
Callback = function(v)
_G.AlwaysDestroy = v
game:GetService("RunService").Heartbeat:Connect(function()
if _G.AlwaysDestroy then
if Options.DestroyLag.Value["Builderman Sentry"] and workspace.Map:FindFirstChild("Ingame"):FindFirstChild("BuildermanSentry") then
workspace.Map:FindFirstChild("Ingame"):FindFirstChild("BuildermanSentry"):Destroy()
elseif Options.DestroyLag.Value["Builderman Dispenser"] and workspace.Map:FindFirstChild("Ingame"):FindFirstChild("BuildermanDispenser") then
workspace.Map:FindFirstChild("Ingame"):FindFirstChild("BuildermanDispenser"):Destroy()
end
end
end)
end})

local Generator = Tabs.Main:AddRightGroupbox('Generator')

Generator:AddDropdown('FixMode', {
	Values = {'Cheat', 'Danger', 'Safe'},
	Default = 3,
	Multi = false,
	Text = 'Fix Mode',
	Searchable = false,
        Callback = function(v)
_G.FixMode = v or "Safe"
end})
Generator:AddToggle("AutoGenerator",{
Text = "Auto Generator",
Default = false,
Callback = function(v)
_G.AutoGen = v
pcall(function()
task.spawn(function()
while _G.AutoGen do
if _G.FixMode == "Cheat" and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("PuzzleUI") then
wait(1.4)
for _,v in ipairs(workspace["Map"]["Ingame"]["Map"]:GetChildren()) do
if v.Name == "Generator" then
v.Remotes.RE:FireServer()
end
end
elseif _G.FixMode == "Danger" and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("PuzzleUI") then
wait(2.5)
for _,v in ipairs(workspace["Map"]["Ingame"]["Map"]:GetChildren()) do
if v.Name == "Generator" then
v.Remotes.RE:FireServer()
end
end
elseif _G.FixMode == "Safe" and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("PuzzleUI") then
wait(5)
for _,v in ipairs(workspace["Map"]["Ingame"]["Map"]:GetChildren()) do
if v.Name == "Generator" then
v.Remotes.RE:FireServer()
end
end
end
wait()
end
end)
end)
end})
Generator:AddToggle("AutoFarm",{
Text = "Auto Farm",
Default = false,
Callback = function(v)
_G.AutoFarm = v
pcall(function()
task.spawn(function()
while _G.AutoFarm == true do
for _,v in ipairs(workspace.Map.Ingame.Map:GetChildren()) do
if v.Name == "Generator" and game.Players.LocalPlayer.Character:FindFirstChild("CollisionHitbox") then
if v.Progress.Value < 100 and not game.Players.LocalPlayer.PlayerGui:FindFirstChild("PuzzleUI") then
game.Players.LocalPlayer.Character.HumanoidRootPart.Position = v:FindFirstChild("Main").Position
game.Players.LocalPlayer.Character:FindFirstChild("CollisionHitbox").Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
fireproximityprompt(v:FindFirstChild("Main").Prompt)
end
end
end
wait(1)
end
end)
end)
end})
Generator:AddButton("Teleport to Generator",function()
_G.TTG = true
task.spawn(function()
while _G.TTG do
for _,v in ipairs(workspace.Map.Ingame.Map:GetChildren()) do
if v.Name == "Generator" and game.Players.LocalPlayer.Character:FindFirstChild("CollisionHitbox") then
if v.Progress.Value < 100 and not game.Players.LocalPlayer.PlayerGui:FindFirstChild("PuzzleUI") then
game.Players.LocalPlayer.Character.HumanoidRootPart.Position = v:FindFirstChild("Main").Position
game.Players.LocalPlayer.Character:FindFirstChild("CollisionHitbox").Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
end
end
end
wait()
end
end)
wait(0.5)
_G.TTG = false
end)
local Misc = Tabs.Main:AddLeftGroupbox('Misc')

Misc:AddSlider("HealthEatPizza",{
Text = "Health Eat Pizza",
Min = 1,
Default = 50,
Max = 50,
Rounding = 1,
Compact = true,
Callback = function(v)
_G.HealthEatPizza = v
end})
Misc:AddSlider("DistanceEatPizza",{
Text = "Distance Eat Pizza",
Min = 10,
Default = 10,
Max = 50,
Rounding = 1,
Compact = true,
Callback = function(v)
_G.DistanceEatPizza = v
end})

_G.HealthEatPizza = 50
_G.DistanceEatPizza = 10

game:GetService("RunService").RenderStepped:Connect(function()
if _G.AlwaysEatPizza and workspace.Map:FindFirstChild("Ingame"):FindFirstChild("Pizza") then
if game.Players.LocalPlayer.Character.Humanoid.Health < _G.HealthEatPizza and (workspace.Map:FindFirstChild("Ingame"):FindFirstChild("Pizza").Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < _G.DistanceEatPizza then
workspace.Map:FindFirstChild("Ingame"):FindFirstChild("Pizza").Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
end
end
end)
Misc:AddToggle("AlwaysEatPizza",{
Text = "Always Eat Pizza",
Default = false,
Callback = function(v)
_G.AlwaysEatPizza = v
end})
Misc:AddDivider()
Misc:AddToggle("AlwaysCoinFlip",{
Text = "Always Flip Coin",
Default = false,
Callback = function(v)
_G.AutoFlipCoins = v or false
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AutoFlipCoins then
game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent"):FireServer("UseActorAbility", "CoinFlip")
end
end)
end})
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.PlayerGui:FindFirstChild("TemporaryUI"):FindFirstChild("PlayerInfo"):FindFirstChild("CurrentSurvivors").Visible = not _G.HideBar
end)
Misc:AddToggle("AlwaysHideBar",{
Text = "Always Hide Bar",
Default = false,
Callback = function(v)
_G.HideBar = v or false
end})

local Players = Tabs.Main:AddRightGroupbox('Player')

Players:AddDropdown('SpeedBoostValue', {
	Values = {'1', '2', '3', '4', '5'},
	Default = 2,
	Multi = false,
	Text = 'Speed Boost',
	Searchable = false,
        Callback = function(v)
_G.SpeedBoostValue = v or '2'
end})

Players:AddToggle("SpeedBoost",{
Text = "Speed Boost",
Default = false,
Callback = function(v)
_G.SpeedBoost = v
while _G.SpeedBoost do
if _G.SpeedBoostValue == '1' then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame += game.Players.LocalPlayer.Character.Humanoid.MoveDirection * 0.1
game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = true
elseif _G.SpeedBoostValue == '2' then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame += game.Players.LocalPlayer.Character.Humanoid.MoveDirection * 0.2
game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = true
elseif _G.SpeedBoostValue == '3' then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame += game.Players.LocalPlayer.Character.Humanoid.MoveDirection * 0.3
game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = true
elseif _G.SpeedBoostValue == '4' then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame += game.Players.LocalPlayer.Character.Humanoid.MoveDirection * 0.4
game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = true
elseif _G.SpeedBoostValue == '5' then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame += game.Players.LocalPlayer.Character.Humanoid.MoveDirection * 0.5
game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = true
end
wait()
end
end})
Players:AddDivider()
Players:AddToggle("InfStamina",{
Text = "Inf Stamina",
Default = false,
Callback = function(v)
_G.InfinityStamina = v
local StaminaScript = require(game.ReplicatedStorage.Systems.Character.Game.Sprinting)
InfStamina = game:GetService("RunService").RenderStepped:Connect(function()
if not _G.InfinityStamina then
InfStamina:Disconnect()
StaminaScript.StaminaLossDisabled = nil
return
end
StaminaScript.StaminaLossDisabled = function() 
end
end)
end})

local Camera = Tabs.Main:AddLeftGroupbox('Camera')

Camera:AddSlider("FieldOfViewValue",{
Text = "Field Of View",
Min = 80,
Default = 80,
Max = 120,
Rounding = 1,
Compact = true,
Callback = function(v)
_G.FieldOfViewValue = v
end})
Camera:AddToggle("FOV",{
Text = "Field Of View",
Default = false,
Callback = function(v)
_G.FieldOfView = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.FieldOfView then
workspace.Camera.FieldOfView = _G.FieldOfViewValue or 80
end
end)
end})
Camera:AddDivider()
Camera:AddToggle("NoFog",{
Text = "No Fog",
Default = false,
Callback = function(v)
_G.NoFog = v
game:GetService("RunService").RenderStepped:Connect(function()
if not game.Lighting:GetAttribute("FogStart") then game.Lighting:SetAttribute("FogStart", game.Lighting.FogStart) end
if not game.Lighting:GetAttribute("FogEnd") then game.Lighting:SetAttribute("FogEnd", game.Lighting.FogEnd) end
game.Lighting.FogStart = _G.NoFog and 0 or game.Lighting:GetAttribute("FogStart")
game.Lighting.FogEnd = _G.NoFog and math.huge or game.Lighting:GetAttribute("FogEnd")
local fog = game.Lighting:FindFirstChildOfClass("Atmosphere")
if fog then
if not fog:GetAttribute("Density") then fog:SetAttribute("Density", fog.Density) end
fog.Density = _G.NoFog and 0 or fog:GetAttribute("Density")
end
end)
end})
Camera:AddToggle("Fullbright",{
Text = "Fullbright",
Default = false,
Callback = function(v)
_G.Fullbright = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.Fullbright then
game.Lighting.OutdoorAmbient = Color3.fromRGB(255,255,255)
game.Lighting.Brightness = 1.5
game.Lighting.GlobalShadows = false
else
game.Lighting.OutdoorAmbient = Color3.fromRGB(55,55,55)
game.Lighting.Brightness = 1.5
game.Lighting.GlobalShadows = true
end
end)
end})

local ESP = Tabs.Main:AddRightGroupbox('ESP')

ESP:AddToggle("KE",{
Text = "Killers ESP",
Default = false,
Callback = function(v)
if v then
for _, v in ipairs(workspace.Players:GetDescendants()) do
if v:IsA("Model") and v.Parent.Name == "Killers" and not v:FindFirstChild("Killer_ESP") then
LibESP:AddESP(v, "", Color3.new(1), 14, "Killer_ESP")
end
end
KillersESP = workspace.Players.DescendantAdded:Connect(function(v)
wait(1)
if v:IsA("Model") and v.Parent.Name == "Killers" and not v:FindFirstChild("Killer_ESP") then
LibESP:AddESP(v, "", Color3.new(1), 14, "Killer_ESP")
end
end)
else
KillersESP:Disconnect()
LibESP:Delete("Killer_ESP")
end
end})
ESP:AddToggle("SE",{
Text = "Survivors ESP",
Default = false,
Callback = function(v)
if v then
for _, v in ipairs(workspace.Players:GetDescendants()) do
if v:IsA("Model") and v.Parent.Name == "Survivors" and not v:FindFirstChild("Survival_ESP") then
LibESP:AddESP(v, "", Color3.fromRGB(0, 255, 0), 14, "Survival_ESP")
end
end
SurvivalESP = workspace.Players.DescendantAdded:Connect(function(v)
if v:IsA("Model") and v.Parent.Name == "Survivors" and not v:FindFirstChild("Survival_ESP") then
LibESP:AddESP(v, "", Color3.fromRGB(0, 255, 0), 14, "Survival_ESP")
end
end)
else
SurvivalESP:Disconnect()
LibESP:Delete("Survival_ESP")
end
end})
ESP:AddToggle("IE",{
Text = "Items ESP",
Default = false,
Callback = function(v)
if v then
for _, v in ipairs(workspace:GetDescendants()) do
if v:IsA("Model") and v.Name == "BloxyCola" and not v:FindFirstChild("Items_ESP") then
LibESP:AddESP(v, "Bloxy Cola", Color3.fromRGB(255, 255, 100), 14, "Items_ESP")
elseif v:IsA("Model") and v.Name == "Medkit" and not v:FindFirstChild("Items_ESP") then
LibESP:AddESP(v, "Medkit", Color3.fromRGB(255, 0, 0), 14, "Items_ESP")
end
end
ItemsESP = workspace.Map.Ingame.DescendantAdded:Connect(function(v)
if v:IsA("Model") and v.Name == "BloxyCola" and not v:FindFirstChild("Items_ESP") then
LibESP:AddESP(v, "Bloxy Cola", Color3.fromRGB(255, 255, 100), 14, "Items_ESP")
elseif v:IsA("Model") and v.Name == "Medkit" and not v:FindFirstChild("Items_ESP") then
LibESP:AddESP(v, "Medkit", Color3.fromRGB(255, 0, 0), 14, "Items_ESP")
end
end)
else
ItemsESP:Disconnect()
LibESP:Delete("Items_ESP")
end
end})
ESP:AddToggle("GE",{
Text = "Generator ESP",
Default = false,
Callback = function(v)
if v then
for _, v in ipairs(workspace:GetDescendants()) do
if v:IsA("Model") and v.Parent.Name == "Map" and v.Name == "Generator" and not v:FindFirstChild("Generator_ESP") then
LibESP:AddESP(v, "Generator", Color3.new(1,1), 14, "Generator_ESP")
end
end
GeneratorESP = workspace.Map.Ingame.DescendantAdded:Connect(function(v)
if v:IsA("Model") and v.Parent.Name == "Map" and v.Name == "Generator" and not v:FindFirstChild("Generator_ESP") then
LibESP:AddESP(v, "Generator", Color3.new(1,1), 14, "Generator_ESP")
end
end)
else
GeneratorESP:Disconnect()
LibESP:Delete("Generator_ESP")
end
end})
ESP:AddToggle("SSTME",{
Text = "Subspace Tripmine ESP",
Default = false,
Callback = function(v)
if v then
for _, v in ipairs(workspace:GetDescendants()) do
if v:IsA("Model") and v.Name == "SubspaceTripmine" and not v:FindFirstChild("SubspaceTripmine_ESP") then
LibESP:AddESP(v, "Subspace Tripmine", Color3.new(1,0,1), 14,"SubspaceTripmine_ESP")
end
end
SubspaceTripmineESP = workspace.Map.Ingame.DescendantAdded:Connect(function(v)
if v:IsA("Model") and v.Name == "SubspaceTripmine" and not v:FindFirstChild("SubspaceTripmine_ESP") then
LibESP:AddESP(v, "Subspace Tripmine", Color3.new(1,0,1), 14, "SubspaceTripmine_ESP")
end
end)
else
SubspaceTripmineESP:Disconnect()
LibESP:Delete("SubspaceTripmine_ESP")
end
end})

local Interact = Tabs.Main:AddLeftGroupbox('Interact')

Interact:AddToggle("Reach",{
Text = "Remote Interact",
Default = false,
Callback = function(v)
if v then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = 15
end
end
IncreasedDistance = workspace.DescendantAdded:Connect(function(v)
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = 15
end
end)
else
IncreasedDistance:Disconnect()
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = 8
end
end
end
end})
Interact:AddToggle("ThroughInteract",{
Text = "Through Interact",
Default = false,
Callback = function(v)
if v then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = false
end
end
ThroughInteract = workspace.DescendantAdded:Connect(function(v)
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = false
end
end)
else
ThroughInteract:Disconnect()
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = true
end
end
end
end})
Interact:AddToggle("InstanceInteract",{
Text = "Instance Interact",
Default = false,
Callback = function(v)
if v then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.HoldDuration = 0
end
end
InstanceInteract = workspace.DescendantAdded:Connect(function(v)
if v:IsA("ProximityPrompt") then
v.HoldDuration = 0
end
end)
else
InstanceInteract:Disconnect()
end
end})
local MenuGroup = Tabs.Settings:AddLeftGroupbox("Menu")
local CreditsGroup = Tabs.Settings:AddRightGroupbox("Credits")

MenuGroup:AddToggle("KeybindMenuOpen", { Default = false, Text = "Open Keybind Menu", Callback = function(v) Library.KeybindFrame.Visible = v end})
MenuGroup:AddToggle("ShowCustomCursor", {Text = "Custom Cursor", Default = true, Callback = function(v) Library.ShowCustomCursor = v end})
MenuGroup:AddDivider()
MenuGroup:AddLabel("Keybind"):AddKeyPicker("MenuKeybind", { Default = "RightShift", NoUI = true, Text = "Menu keybind" })
MenuGroup:AddButton("Unload", function() Library:Unload() end)

CreditsGroup:AddLabel("Developers:")
CreditsGroup:AddLabel("Owner | rechedmcvn")
CreditsGroup:AddLabel("Reviewer:")
CreditsGroup:AddLabel("Not Found.")

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

SaveManager:IgnoreThemeSettings()

ThemeManager:SetFolder("MyScriptHub")
SaveManager:SetFolder("MyScriptHub/specific-game")
SaveManager:SetSubFolder("specific-place") 

SaveManager:BuildConfigSection(Tabs.Settings)

ThemeManager:ApplyToTab(Tabs.Settings)
