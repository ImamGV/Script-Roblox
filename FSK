local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/x2zu/OPEN-SOURCE-UI-ROBLOX/refs/heads/main/X2ZU%20UI%20ROBLOX%20OPEN%20SOURCE/DummyUi-leak-by-x2zu/fetching-main/Tools/Framework.luau"))()

local Window = Library:Window({
    Title = "Forsaken",
    Desc = "Forsaken on top",
    Icon = 95073582077930,
    Theme = "Dark",
    Config = {
        Keybind = Enum.KeyCode.LeftControl,
        Size = UDim2.new(0, 560, 0, 480)
    },
    CloseUIButton = {
        Enabled = true,
        Text = "Toggle"
    }
})
local SidebarLine = Instance.new("Frame")
SidebarLine.Size = UDim2.new(0, 1, 1, 0)
SidebarLine.Position = UDim2.new(0, 140, 0, 0)
SidebarLine.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
SidebarLine.BorderSizePixel = 0
SidebarLine.ZIndex = 5
SidebarLine.Name = "SidebarLine"
SidebarLine.Parent = game:GetService("CoreGui")

local Tab = {
Main = Window:Tab({Title = "Main", Icon = "book"}),
Players = Window:Tab({Title = "Players", Icon = "user"}),
Exploit = Window:Tab({Title = "Exploits", Icon = "star"}),
Visual = Window:Tab({Title = "Visual", Icon = "eye"})
}
--// Main Tab \\
Tab.Main:Section({Title = "Generator"})
Tab.Main:Slider({
Title = "Fix Delay",
Min = 1.5,
Max = 12,
Rounding = 1,
Value = 1.5,
Callback = function(v)
_G.AutoGeneratorDelay = v
end})
Tab.Main:Toggle({
Title = "Auto Fix Generator",
Value = false,
Callback = function(v)
_G.AutoGenerator = v
while _G.AutoGenerator do
for _,v in pairs(workspace.Map.Ingame.Map:GetChildren()) do
if v.Name == "Generator" then
v:WaitForChild("Generator"):WaitForChild("Remotes"):WaitForChild("RE"):FireServer()
end
end
wait(_G.AutoGeneratorDelay or 1.5)
end
end})
Tab.Main:Section({Title = "Misc"})
Tab.Main:Toggle({
Title = "Auto Pizza",
Value = false,
Callback = function(v)
_G.AutoPizza = v
while _G.AutoPizza and game.Players.LocalPlayer.Character.Humanoid.Health < 80 do
for _,v in pairs(workspace.Map.Ingame:GetChildren()) do
if v.Name == "Pizza" then
v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
end
end
wait()
end
end})
--// Players Tab \\
Tab.Players:Section({Title = "Players"})
Tab.Players:Slider({
Title = "Speed Boost",
Min = 0.1,
Max = 1,
Rounding = 1,
Value = 0.1,
Callback = function(v)
_G.SpeedBoostValue = v
end})
Tab.Players:Toggle({
Title = "Apply Speed",
Value = false,
Callback = function(v)
_G.SpeedBoost = v
while _G.SpeedBoost do
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame += game.Players.LocalPlayer.Character.Humanoid.MoveDirection * _G.SpeedBoostValue
game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = true
wait()
end
end})
Tab.Players:Toggle({
Title = "Inf Stamina",
Value = false,
Callback = function(v)
_G.InfinityStamina = v
local StaminaScript = require(game.ReplicatedStorage.Systems.Character.Game.Sprinting)
InfStamina = game:GetService("RunService").RenderStepped:Connect(function()
if not _G.InfinityStamina then
InfStamina:Disconnect()
StaminaScript.StaminaLossDisabled = nil
return
end
StaminaScript.StaminaLossDisabled = function() 
end
end)
end})
--// Exploits Tab \\
Tab.Exploits:Section({Title = "Anti"})
Tab.Exploits:Toggle({
Title = "Anti-John Doe Trail",
Value = false,
Callback = function(v)
if v then
for _,v in ipairs(workspace.Players.Killers:GetDescendants()) do
if v.Name == "Trail" and v then
v.CanTouch = false
end
end
AntiJohnDoeTrail = workspace.Players.Killers.DescendantAdded:Connect(function(v)
if v.Name == "Trail" and v then
v.CanTouch = false
end
end)
else
AntiJohnDoeTrail:Disconnect()
for _,v in ipairs(workspace.Players:GetDescendants()) do
if v.Name == "Trail" then
v.CanTouch = true
end
end
end
end})
Tab.Exploits:Toggle({
Title = "Anti-John Doe Stomp",
Value = false,
Callback = function(v)
_G.AntiJohnDoeStomp = v
game:GetService("RunService").Heartbeat:Connect(function()
if _G.AntiJohnDoeStomp then
for _, Player in pairs(game.Players:GetPlayers()) do
if Player ~= game.Players.LocalPlayer and Player.Character then
for _,v in ipairs(workspace.Map.Ingame:GetDescendants()) do
if v.Name == Player.Name .. "Shadows" then
v.Shadow.CanTouch = false
end
end
end
end
else
for _, Player in pairs(game.Players:GetPlayers()) do
if Player ~= game.Players.LocalPlayer and Player.Character then
for _,v in ipairs(workspace.Map.Ingame:GetDescendants()) do
if v.Name == Player.Name .. "Shadows" then
v.Shadow.CanTouch = true
end
end
end
end
end
end)
end})

--[[
    -- Toggle
    Tab:Toggle({
        Title = "Enable Feature",
        Desc = "Toggle to enable or disable the feature",
        Value = false,
        Callback = function(v)
            print("Toggle:", v)
        end
    })

    -- Button
    Tab:Button({
        Title = "Run Action",
        Desc = "Click to perform something",
        Callback = function()
            print("Button clicked!")
            Window:Notify({
                Title = "Button",
                Desc = "Action performed successfully.",
                Time = 3
            })
        end
    })

    -- Textbox
    Tab:Textbox({
        Title = "Input Text",
        Desc = "Type something here",
        Placeholder = "Enter value",
        Value = "",
        ClearTextOnFocus = false,
        Callback = function(text)
            print("Textbox value:", text)
        end
    })

    -- Slider
    Tab:Slider({
        Title = "Set Speed",
        Min = 0,
        Max = 100,
        Rounding = 0,
        Value = 25,
        Callback = function(val)
            print("Slider:", val)
        end
    })

    -- Dropdown
    Tab:Dropdown({
        Title = "Choose Option",
        List = {"Option 1", "Option 2", "Option 3"},
        Value = "Option 1",
        Callback = function(choice)
            print("Selected:", choice)
        end
    })

    -- Code Display
    local CodeBlock = Tab:Code({
        Title = "Example Code",
        Code = "-- This is a code preview\nprint('Hello world')"
    })

    -- Simulate update
    task.delay(5, function()
        CodeBlock:SetCode("-- Updated!\nprint('New content loaded')")
    end)
end

-- Line Separator
Window:Line()

-- Another Tab Example
local Extra = Window:Tab({Title = "Extra", Icon = "tag"}) do
    Extra:Section({Title = "About"})
    Extra:Button({
        Title = "Show Message",
        Desc = "Display a popup",
        Callback = function()
            Window:Notify({
                Title = "Fluent UI",
                Desc = "Everything works fine!",
                Time = 3
            })
        end
    })
end
Window:Line()
local Extra = Window:Tab({Title = "Settings", Icon = "wrench"}) do
    Extra:Section({Title = "Config"})
    Extra:Button({
        Title = "Show Message",
        Desc = "Display a popup",
        Callback = function()
            Window:Notify({
                Title = "Fluent UI",
                Desc = "Everything works fine!",
                Time = 3
            })
        end
    })
end
-- Final Notification
Window:Notify({
    Title = "x2zu",
    Desc = "All components loaded successfully! Credits leak: @x2zu",
    Time = 4
})
]]
